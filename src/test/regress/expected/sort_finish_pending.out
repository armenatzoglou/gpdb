drop table if exists _tmp_table;
NOTICE:  table "_tmp_table" does not exist, skipping
create table _tmp_table (i1 int, i2 int, i3 int, i4 int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into _tmp_table select i, i % 100, i % 10000, i % 75 from generate_series(0,99999) i;
-- make sort to spill
set statement_mem="2MB";
set gp_enable_mk_sort=on;
set gp_cte_sharing=on;
\! gpfaultinjector -f execsort_mksort_mergeruns -y reset --seg_dbid 2 | grep ERROR
-- set QueryFinishPending=true in sort mergeruns. This will stop sort and set result_tape to NULL
\! gpfaultinjector -f execsort_mksort_mergeruns -y finish_pending --seg_dbid 2 | grep ERROR
-- return results although sort will be interrupted in one of the segments 
select DISTINCT S from (select row_number() over(partition by i1 order by i2) AS T, count(*) over (partition by i1) AS S from _tmp_table) AS TMP;
 s 
---
 1
(1 row)

\! gpfaultinjector -f execsort_mksort_mergeruns -y status --seg_dbid 2 | grep "fault injection state:"
fault name:'execsort_mksort_mergeruns' fault type:'finish_pending' ddl statement:'' database name:'' table name:'' occurrence:'1' sleep time:'10' fault injection state:'completed'
